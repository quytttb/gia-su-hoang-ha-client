import React, { useState } from 'react';

interface DevFormHelperProps {
     onFillForm: (data: any) => void;
     onClearForm: () => void;
}

const testDataSets = [
     {
          name: 'Dataset 1',
          data: {
               parentName: 'Nguy·ªÖn VƒÉn An',
               parentPhone: '0987654321',
               parentAddress: '123 ƒê∆∞·ªùng ABC, Ph∆∞·ªùng XYZ, Qu·∫≠n 123, TP.HCM',
               name: 'Nguy·ªÖn Th·ªã B√¨nh',
               school: 'Tr∆∞·ªùng THPT L√™ Qu√Ω ƒê√¥n',
               academicDescription: 'H·ªçc sinh kh√°, c·∫ßn c·∫£i thi·ªán m√¥n To√°n v√† V·∫≠t L√Ω. C√≥ h·ª©ng th√∫ v·ªõi m√¥n VƒÉn v√† Ti·∫øng Anh.'
          }
     },
     {
          name: 'Dataset 2',
          data: {
               parentName: 'Tr·∫ßn Th·ªã Lan',
               parentPhone: '0912345678',
               parentAddress: '456 ƒê∆∞·ªùng DEF, Ph∆∞·ªùng ABC, Qu·∫≠n 456, H√† N·ªôi',
               name: 'Tr·∫ßn VƒÉn C∆∞·ªùng',
               school: 'Tr∆∞·ªùng THPT Chu VƒÉn An',
               academicDescription: 'H·ªçc sinh gi·ªèi To√°n, c·∫ßn ph√°t tri·ªÉn th√™m k·ªπ nƒÉng Ti·∫øng Anh v√† VƒÉn.'
          }
     },
     {
          name: 'Dataset 3',
          data: {
               parentName: 'L√™ Ho√†ng Nam',
               parentPhone: '0923456789',
               parentAddress: '789 ƒê∆∞·ªùng GHI, Ph∆∞·ªùng DEF, Qu·∫≠n 789, ƒê√† N·∫µng',
               name: 'L√™ Th·ªã Mai',
               school: 'Tr∆∞·ªùng THPT Phan Ch√¢u Trinh',
               academicDescription: 'H·ªçc sinh trung b√¨nh, c·∫ßn h·ªó tr·ª£ to√†n di·ªán c√°c m√¥n h·ªçc.'
          }
     },
     {
          name: 'Validation Test',
          data: {
               parentName: 'Test User',
               parentPhone: '0123456789',
               parentAddress: 'Test Address',
               name: 'Test Student',
               school: 'Test School',
               academicDescription: 'Test description for validation'
          }
     },
     {
          name: 'Edge Case Test',
          data: {
               parentName: 'Ng∆∞·ªùi D√πng C√≥ T√™n R·∫•t D√†i ƒê·ªÉ Test Validation Gi·ªõi H·∫°n K√Ω T·ª±',
               parentPhone: '0999999999',
               parentAddress: 'ƒê·ªãa ch·ªâ r·∫•t d√†i ƒë·ªÉ test validation: 123/456/789 ƒê∆∞·ªùng ABCDEFGHIJK, Ph∆∞·ªùng MNOPQRST, Qu·∫≠n UVWXYZ, TP.HCM, Vi·ªát Nam',
               name: 'H·ªçc Sinh C√≥ T√™n R·∫•t D√†i',
               school: 'Tr∆∞·ªùng THPT C√≥ T√™n R·∫•t D√†i ƒê·ªÉ Test',
               academicDescription: 'M√¥ t·∫£ r·∫•t d√†i v·ªÅ l·ª±c h·ªçc c·ªßa h·ªçc sinh ƒë·ªÉ test validation gi·ªõi h·∫°n k√Ω t·ª± v√† xem form c√≥ x·ª≠ l√Ω ƒë∆∞·ª£c kh√¥ng. H·ªçc sinh n√†y c√≥ nhi·ªÅu ƒëi·ªÉm m·∫°nh v√† y·∫øu c·∫ßn ƒë∆∞·ª£c h·ªó tr·ª£.'
          }
     }
];

const DevFormHelper: React.FC<DevFormHelperProps> = ({ onFillForm, onClearForm }) => {
     const [isExpanded, setIsExpanded] = useState(false);
     const [selectedDataset, setSelectedDataset] = useState(0);

     // Only show in development mode
     if (process.env.NODE_ENV !== 'development') {
          return null;
     }

     const handleFillForm = (datasetIndex: number) => {
          const dataset = testDataSets[datasetIndex];
          console.log(`üöÄ Filling form with ${dataset.name}:`, dataset.data);
          onFillForm(dataset.data);
     };

     const handleQuickFill = () => {
          handleFillForm(selectedDataset);
     };

     const handleRandomFill = () => {
          const randomIndex = Math.floor(Math.random() * testDataSets.length);
          setSelectedDataset(randomIndex);
          handleFillForm(randomIndex);
     };

     return (
          <div className="fixed top-4 right-4 z-50">
               {/* Toggle Button */}
               <button
                    onClick={() => setIsExpanded(!isExpanded)}
                    className="bg-blue-600 hover:bg-blue-700 text-white px-3 py-2 rounded-lg shadow-lg text-sm font-medium transition-colors duration-200"
                    title="Development Form Helper"
               >
                    üõ†Ô∏è Dev Tools {isExpanded ? '‚ñº' : '‚ñ∂'}
               </button>

               {/* Expanded Panel */}
               {isExpanded && (
                    <div className="absolute top-12 right-0 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-xl p-4 min-w-[280px]">
                         <h3 className="text-sm font-semibold text-gray-800 dark:text-gray-200 mb-3">
                              üöÄ Form Auto Fill
                         </h3>

                         {/* Quick Actions */}
                         <div className="space-y-2 mb-4">
                              <div className="flex gap-2">
                                   <button
                                        onClick={handleQuickFill}
                                        className="flex-1 bg-green-500 hover:bg-green-600 text-white px-3 py-2 rounded text-xs font-medium transition-colors duration-200"
                                   >
                                        üöÄ Quick Fill
                                   </button>
                                   <button
                                        onClick={handleRandomFill}
                                        className="flex-1 bg-purple-500 hover:bg-purple-600 text-white px-3 py-2 rounded text-xs font-medium transition-colors duration-200"
                                   >
                                        üé≤ Random
                                   </button>
                                   <button
                                        onClick={onClearForm}
                                        className="flex-1 bg-red-500 hover:bg-red-600 text-white px-3 py-2 rounded text-xs font-medium transition-colors duration-200"
                                   >
                                        üßπ Clear
                                   </button>
                              </div>
                         </div>

                         {/* Dataset Selection */}
                         <div className="mb-3">
                              <label className="block text-xs font-medium text-gray-700 dark:text-gray-300 mb-1">
                                   Select Dataset:
                              </label>
                              <select
                                   value={selectedDataset}
                                   onChange={(e) => setSelectedDataset(Number(e.target.value))}
                                   className="w-full text-xs border border-gray-300 dark:border-gray-600 rounded px-2 py-1 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100"
                              >
                                   {testDataSets.map((dataset, index) => (
                                        <option key={index} value={index}>
                                             {dataset.name}
                                        </option>
                                   ))}
                              </select>
                         </div>

                         {/* Individual Dataset Buttons */}
                         <div className="space-y-1">
                              <p className="text-xs text-gray-600 dark:text-gray-400 mb-2">Or fill with specific dataset:</p>
                              {testDataSets.map((dataset, index) => (
                                   <button
                                        key={index}
                                        onClick={() => handleFillForm(index)}
                                        className="w-full text-left bg-gray-100 hover:bg-gray-200 dark:bg-gray-700 dark:hover:bg-gray-600 text-gray-800 dark:text-gray-200 px-2 py-1 rounded text-xs transition-colors duration-200"
                                   >
                                        üìä {dataset.name}
                                   </button>
                              ))}
                         </div>

                         {/* Info */}
                         <div className="mt-3 pt-3 border-t border-gray-200 dark:border-gray-600">
                              <p className="text-xs text-gray-500 dark:text-gray-400">
                                   üí° Dev mode only. Hidden in production.
                              </p>
                         </div>
                    </div>
               )}
          </div>
     );
};

export default DevFormHelper;
