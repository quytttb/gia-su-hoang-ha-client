rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isStaff() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'staff'];
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated() && (isOwner(userId) || isStaff());
      allow create: if isAuthenticated() && isOwner(userId);
      allow update: if isAuthenticated() && (isOwner(userId) || isAdmin());
      allow delete: if isAdmin();
    }

    // Courses collection
    match /courses/{courseId} {
      allow read: if true; // Public read for course browsing
      allow create, update, delete: if isStaff();
    }

    // Classes collection
    match /classes/{classId} {
      allow read: if true; // Public read for class browsing
      allow create, update, delete: if isStaff();
    }

    // Registrations collection
    match /registrations/{registrationId} {
      allow read: if isStaff() || 
                     (isAuthenticated() && resource.data.userId == request.auth.uid);
      allow create: if true; // Anyone can register (guest or authenticated)
      allow update: if isStaff() || 
                       (isAuthenticated() && resource.data.userId == request.auth.uid);
      allow delete: if isAdmin();
    }

    // Inquiries collection
    match /inquiries/{inquiryId} {
      allow read: if isStaff() || 
                     (isAuthenticated() && resource.data.userId == request.auth.uid);
      allow create: if true; // Anyone can create inquiries
      allow update: if isStaff() || 
                       (isAuthenticated() && resource.data.userId == request.auth.uid);
      allow delete: if isAdmin();
    }

    // Contacts collection (for contact form messages)
    match /contacts/{contactId} {
      allow read, update, delete: if isStaff();
      allow create: if true; // Anyone can create contact messages
    }

    // Schedules collection
    match /schedules/{scheduleId} {
      allow read: if true; // Public read for schedule viewing
      allow create, update, delete: if isStaff();
    }

    // Analytics collection
    match /analytics/{analyticsId} {
      allow read: if isStaff();
      allow create: if true; // Anyone can create analytics events
      allow update, delete: if isAdmin();
    }

    // User stats collection
    match /userStats/{statId} {
      allow read: if isStaff() || 
                     (isAuthenticated() && resource.data.userId == request.auth.uid);
      allow create, update: if isStaff();
      allow delete: if isAdmin();
    }

    // Settings collection
    match /settings/{settingId} {
      allow read: if resource.data.isPublic == true || isStaff();
      allow create, update, delete: if isAdmin();
    }

    // Banners collection
    match /banners/{bannerId} {
      allow read: if true; // Public read for banner display
      allow create, update, delete: if isStaff();
    }

    // Tutors collection
    match /tutors/{tutorId} {
      allow read: if true; // Public read for tutor display
      allow create, update, delete: if isStaff();
    }

    // Blog posts collection
    match /blogPosts/{postId} {
      // Public can read only published posts; staff/admin can read all
      allow read: if resource.data.status == 'published' || isStaff();
      // Only staff (admin or staff role) may create or update posts
      allow create, update: if isStaff();
      // Only admin can delete (potential hard delete); otherwise prefer status toggle via update
      allow delete: if isAdmin();
    }
  }
} 