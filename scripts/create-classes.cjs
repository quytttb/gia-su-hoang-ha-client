const { initializeApp } = require('firebase/app');
const {
     getFirestore,
     collection,
     addDoc,
     getDocs,
     deleteDoc,
     serverTimestamp
} = require('firebase/firestore');

// Firebase config - copy from your env or config
const firebaseConfig = {
     apiKey: "AIzaSyDINyJJ1-lPfgFPTvZAhBCB6JL1bOLPPVY",
     authDomain: "gia-su-hoang-ha.firebaseapp.com",
     projectId: "gia-su-hoang-ha",
     storageBucket: "gia-su-hoang-ha.firebasestorage.app",
     messagingSenderId: "1068031506808",
     appId: "1:1068031506808:web:df1ef4f1d73e07b3a3d583",
     measurementId: "G-ZBQR1GYSJ5"
};

// Initialize Firebase
const app = initializeApp(firebaseConfig);
const db = getFirestore(app);

// Sample classes data with correct structure
const classes = [
     {
          title: "To√°n h·ªçc l·ªõp 10",
          description: "L·ªõp h·ªçc to√°n h·ªçc c∆° b·∫£n d√†nh cho h·ªçc sinh l·ªõp 10, bao g·ªìm ƒë·∫°i s·ªë v√† h√¨nh h·ªçc.",
          price: 1500000,
          duration: "3 th√°ng",
          level: "C∆° b·∫£n",
          subjects: ["To√°n h·ªçc", "ƒê·∫°i s·ªë", "H√¨nh h·ªçc"],
          features: ["B√†i t·∫≠p v·ªÅ nh√†", "Ki·ªÉm tra ƒë·ªãnh k·ª≥", "T∆∞ v·∫•n c√° nh√¢n"],
          image: "https://images.unsplash.com/photo-1509228468518-180dd4864904?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80",
          isActive: true,
          instructor: "Th·∫ßy Nguy·ªÖn VƒÉn A",
          maxStudents: 20,
          schedule: [
               { dayOfWeek: 2, time: "19:00-21:00" },
               { dayOfWeek: 4, time: "19:00-21:00" }
          ]
     },
     {
          title: "V·∫≠t l√Ω l·ªõp 11",
          description: "L·ªõp h·ªçc v·∫≠t l√Ω n√¢ng cao cho h·ªçc sinh l·ªõp 11, t·∫≠p trung v√†o c∆° h·ªçc v√† ƒëi·ªán h·ªçc.",
          price: 1800000,
          duration: "4 th√°ng",
          level: "N√¢ng cao",
          subjects: ["V·∫≠t l√Ω", "C∆° h·ªçc", "ƒêi·ªán h·ªçc"],
          features: ["Th√≠ nghi·ªám th·ª±c h√†nh", "Gi·∫£i b√†i t·∫≠p kh√≥", "√în thi h·ªçc k·ª≥"],
          image: "https://images.unsplash.com/photo-1635070041078-e363dbe005cb?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80",
          isActive: true,
          instructor: "C√¥ Tr·∫ßn Th·ªã B",
          maxStudents: 15,
          schedule: [
               { dayOfWeek: 1, time: "18:30-20:30" },
               { dayOfWeek: 3, time: "18:30-20:30" }
          ]
     },
     {
          title: "H√≥a h·ªçc l·ªõp 12",
          description: "L·ªõp h·ªçc h√≥a h·ªçc chuy√™n s√¢u cho h·ªçc sinh l·ªõp 12, chu·∫©n b·ªã cho k·ª≥ thi THPT.",
          price: 2500000,
          duration: "6 th√°ng",
          level: "Chuy√™n s√¢u",
          subjects: ["H√≥a h·ªçc", "H√≥a v√¥ c∆°", "H√≥a h·ªØu c∆°"],
          features: ["Luy·ªán ƒë·ªÅ thi THPT", "Ph∆∞∆°ng ph√°p gi·∫£i nhanh", "Th√≠ nghi·ªám minh h·ªça"],
          image: "https://images.unsplash.com/photo-1532634218-8b3dceb3b0fb?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80",
          isActive: true,
          instructor: "Th·∫ßy L√™ VƒÉn C",
          maxStudents: 25,
          schedule: [
               { dayOfWeek: 0, time: "08:00-10:00" },
               { dayOfWeek: 6, time: "14:00-16:00" }
          ]
     },
     {
          title: "Ti·∫øng Anh giao ti·∫øp",
          description: "L·ªõp h·ªçc ti·∫øng Anh giao ti·∫øp c∆° b·∫£n cho m·ªçi l·ª©a tu·ªïi.",
          price: 1200000,
          duration: "2 th√°ng",
          level: "C∆° b·∫£n",
          subjects: ["Ti·∫øng Anh", "Giao ti·∫øp", "Ph√°t √¢m"],
          features: ["Luy·ªán ph√°t √¢m", "Th·ª±c h√†nh h·ªôi tho·∫°i", "T·ª´ v·ª±ng th·ª±c t·∫ø"],
          image: "https://images.unsplash.com/photo-1434030216411-0b793f4b4173?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80",
          isActive: true,
          instructor: "C√¥ Ph·∫°m Th·ªã D",
          maxStudents: 12,
          schedule: [
               { dayOfWeek: 2, time: "17:00-19:00" },
               { dayOfWeek: 5, time: "17:00-19:00" }
          ]
     }
];

async function createClasses() {
     try {
          console.log('üöÄ B·∫Øt ƒë·∫ßu t·∫°o classes...');

          // Clear existing classes first
          console.log('üóëÔ∏è X√≥a classes c≈©...');
          const existingClassesSnapshot = await getDocs(collection(db, 'classes'));
          const deletePromises = existingClassesSnapshot.docs.map(doc => deleteDoc(doc.ref));
          await Promise.all(deletePromises);
          console.log(`‚úÖ ƒê√£ x√≥a ${existingClassesSnapshot.size} classes c≈©`);

          // Create new classes
          for (const classData of classes) {
               try {
                    const docRef = await addDoc(collection(db, 'classes'), {
                         ...classData,
                         createdAt: serverTimestamp(),
                         updatedAt: serverTimestamp()
                    });
                    console.log(`‚úÖ ƒê√£ t·∫°o class: ${classData.title} (ID: ${docRef.id})`);
               } catch (error) {
                    console.error(`‚ùå L·ªói t·∫°o class ${classData.title}:`, error.message);
               }
          }

          console.log('üéâ Ho√†n th√†nh t·∫°o classes!');
          process.exit(0);

     } catch (error) {
          console.error('‚ùå L·ªói:', error.message);
          process.exit(1);
     }
}

createClasses(); 