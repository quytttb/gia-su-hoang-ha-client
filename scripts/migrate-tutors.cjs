#!/usr/bin/env node

/**
 * Script migrate tutors mock data v√†o Firestore
 */

const { initializeApp } = require('firebase/app');
const { getFirestore, collection, addDoc, getDocs, deleteDoc, doc } = require('firebase/firestore');
const dotenv = require('dotenv');

// Load environment variables
dotenv.config();

// Firebase configuration
const firebaseConfig = {
     apiKey: process.env.VITE_FIREBASE_API_KEY,
     authDomain: process.env.VITE_FIREBASE_AUTH_DOMAIN,
     projectId: process.env.VITE_FIREBASE_PROJECT_ID,
     storageBucket: process.env.VITE_FIREBASE_STORAGE_BUCKET,
     messagingSenderId: process.env.VITE_FIREBASE_MESSAGING_SENDER_ID,
     appId: process.env.VITE_FIREBASE_APP_ID,
     measurementId: process.env.VITE_FIREBASE_MEASUREMENT_ID,
};

// Initialize Firebase
const app = initializeApp(firebaseConfig);
const db = getFirestore(app);

// Mock tutors data
const mockTutors = [
     {
          name: "Th·∫ßy Nguy·ªÖn VƒÉn Minh",
          specialty: "To√°n h·ªçc THPT",
          bio: "10 nƒÉm kinh nghi·ªám gi·∫£ng d·∫°y To√°n THPT. Chuy√™n luy·ªán thi ƒë·∫°i h·ªçc v√† h·ªçc sinh gi·ªèi.",
          experience: "10 nƒÉm",
          education: "Th·∫°c sƒ© To√°n h·ªçc - ƒêH S∆∞ ph·∫°m H√† N·ªôi",
          imageUrl: "/tutor1.jpg",
          subjects: ["To√°n h·ªçc", "ƒê·∫°i s·ªë", "H√¨nh h·ªçc"],
          availability: ["Th·ª© 2", "Th·ª© 4", "Th·ª© 6", "Th·ª© 7"],
          isActive: true
     },
     {
          name: "C√¥ Tr·∫ßn Th·ªã Lan",
          specialty: "Ti·∫øng Anh giao ti·∫øp",
          bio: "C·ª≠ nh√¢n Ng√¥n ng·ªØ Anh, 8 nƒÉm kinh nghi·ªám gi·∫£ng d·∫°y ti·∫øng Anh giao ti·∫øp v√† luy·ªán thi IELTS.",
          experience: "8 nƒÉm",
          education: "C·ª≠ nh√¢n Ng√¥n ng·ªØ Anh - ƒêH Ngo·∫°i ng·ªØ H√† N·ªôi",
          imageUrl: "/tutor2.jpg",
          subjects: ["Ti·∫øng Anh", "IELTS", "TOEIC"],
          availability: ["Th·ª© 3", "Th·ª© 5", "Th·ª© 7", "Ch·ªß nh·∫≠t"],
          isActive: true
     },
     {
          name: "Th·∫ßy L√™ Ho√†ng Nam",
          specialty: "V·∫≠t l√Ω THPT",
          bio: "Gi·∫£ng vi√™n V·∫≠t l√Ω v·ªõi 12 nƒÉm kinh nghi·ªám. Chuy√™n luy·ªán thi ƒë·∫°i h·ªçc kh·ªëi A v√† A1.",
          experience: "12 nƒÉm",
          education: "Th·∫°c sƒ© V·∫≠t l√Ω - ƒêH B√°ch khoa H√† N·ªôi",
          imageUrl: "/tutor3.jpg",
          subjects: ["V·∫≠t l√Ω", "C∆° h·ªçc", "ƒêi·ªán h·ªçc"],
          availability: ["Th·ª© 2", "Th·ª© 4", "Th·ª© 6"],
          isActive: true
     },
     {
          name: "C√¥ Ph·∫°m Th·ªã H∆∞∆°ng",
          specialty: "H√≥a h·ªçc THPT",
          bio: "7 nƒÉm kinh nghi·ªám gi·∫£ng d·∫°y H√≥a h·ªçc. Chuy√™n gia trong vi·ªác gi·∫£i b√†i t·∫≠p h√≥a h·ªçc ph·ª©c t·∫°p.",
          experience: "7 nƒÉm",
          education: "C·ª≠ nh√¢n H√≥a h·ªçc - ƒêH Khoa h·ªçc T·ª± nhi√™n",
          imageUrl: "/tutor4.jpg",
          subjects: ["H√≥a h·ªçc", "H√≥a h·ªØu c∆°", "H√≥a v√¥ c∆°"],
          availability: ["Th·ª© 3", "Th·ª© 5", "Th·ª© 7"],
          isActive: true
     },
     {
          name: "Th·∫ßy ƒê·ªó Minh Qu√¢n",
          specialty: "VƒÉn h·ªçc THPT",
          bio: "Th·∫°c sƒ© VƒÉn h·ªçc Vi·ªát Nam, 9 nƒÉm kinh nghi·ªám gi·∫£ng d·∫°y Ng·ªØ vƒÉn v√† luy·ªán thi ƒë·∫°i h·ªçc.",
          experience: "9 nƒÉm",
          education: "Th·∫°c sƒ© VƒÉn h·ªçc Vi·ªát Nam - ƒêH S∆∞ ph·∫°m H√† N·ªôi",
          imageUrl: "/tutor5.jpg",
          subjects: ["Ng·ªØ vƒÉn", "VƒÉn h·ªçc", "Ti·∫øng Vi·ªát"],
          availability: ["Th·ª© 2", "Th·ª© 4", "Th·ª© 6", "Ch·ªß nh·∫≠t"],
          isActive: true
     }
];

async function clearTutorsCollection() {
     console.log('üóëÔ∏è Clearing existing tutors...');
     const snapshot = await getDocs(collection(db, 'tutors'));

     const deletePromises = snapshot.docs.map(docSnap =>
          deleteDoc(doc(db, 'tutors', docSnap.id))
     );

     await Promise.all(deletePromises);
     console.log(`‚úÖ Deleted ${snapshot.docs.length} existing tutors`);
}

async function migrateTutors() {
     console.log('üë®‚Äçüè´ Migrating tutors...');

     const now = new Date().toISOString();

     for (const tutor of mockTutors) {
          await addDoc(collection(db, 'tutors'), {
               ...tutor,
               createdAt: now,
               updatedAt: now,
          });
          console.log(`‚úÖ Added tutor: ${tutor.name}`);
     }

     console.log(`‚úÖ Successfully migrated ${mockTutors.length} tutors`);
}

async function runMigration() {
     try {
          console.log('üöÄ Starting tutors migration...\n');

          // Check Firebase connection
          if (!firebaseConfig.apiKey) {
               throw new Error('Firebase configuration not found. Please check your .env file.');
          }

          await clearTutorsCollection();
          await migrateTutors();

          console.log('\nüéâ Tutors migration completed successfully!');
          console.log('\nYou can now:');
          console.log('1. View tutors in Firebase Console');
          console.log('2. Test the AboutPage to see Firestore tutors');
          console.log('3. Update VITE_USE_MOCK_DATA=false for tutors');

     } catch (error) {
          console.error('‚ùå Migration failed:', error.message);
          process.exit(1);
     }
}

// Run migration
runMigration(); 